default:
  image: node:latest
  before_script:
    - npm ci --cache .npm --prefer-offline
    - npm config set "@contextualize:registry" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/"
    - npm config set -- "${CI_API_V4_URL#https?}/projects/${CI_PROJECT_ID}/packages/npm/:_authToken" "${CI_JOB_TOKEN}"
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/

stages:
  - test
  - lint
  - publish
  - release

test:
  stage: test
  script:
    - npm install
    - npm test
  coverage: '/Lines\s*:\s*(\d+.?\d*)%/'
  artifacts:
    when: always
    paths:
      - junit.xml
    reports:
      junit: junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml

lint:
  stage: lint
  script:
    - npm install
    - npm run lint && npm run format-check

publish:
  stage: publish
  only:
    - tags
  script:
    - npm publish

pages:
  stage: publish
  only:
    - main
  script:
    - npm run storybook-build
  artifacts:
    paths:
      - public

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  only:
    - tags
  before_script: []
  script:
    - echo "Creating release $CI_COMMIT_TAG"
  release:
    tag_name: $CI_COMMIT_TAG
    name: $CI_COMMIT_TAG
    description: "Release automatically generated by pipeline."
